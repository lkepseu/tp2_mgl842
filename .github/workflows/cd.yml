name: CD Pipeline

on:
  workflow_run:
    workflows: ['CI Pipeline']
    types:
      - completed

jobs:
  check-ci-status:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "âœ… CI passed, ready to deploy"

  preview-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: check-ci-status
    runs-on: ubuntu-latest
    name: Deploy PR Preview on Vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel (Preview)
        run: |
          npm install -g vercel
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes --scope kepseus-projects --confirm --build-env NUXT_PUBLIC_ENV=preview

  production-deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' }}
    needs: check-ci-status
    runs-on: ubuntu-latest
    name: Deploy to Production on Vercel
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel (Production)
        run: |
          npm install -g vercel
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes --scope kepseus-projects --confirm --build-env NUXT_PUBLIC_ENV=production
